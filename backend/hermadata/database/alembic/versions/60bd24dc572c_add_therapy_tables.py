"""add medical_activity tables

Revision ID: 60bd24dc572c
Revises: aad6f2ff9514
Create Date: 2024-11-21 20:31:53.046347

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "60bd24dc572c"
down_revision: Union[str, None] = "aad6f2ff9514"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "medical_activity",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("animal_id", sa.Integer(), nullable=False),
        sa.Column("vet_id", sa.Integer(), nullable=True),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column("from_date", sa.Date(), nullable=True),
        sa.Column("to_date", sa.Date(), nullable=True),
        sa.Column("scheduled_date", sa.Date(), nullable=True),
        sa.Column("recurrence_type", sa.String(length=10), nullable=True),
        sa.Column("recurrence_value", sa.Integer(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["animal_id"],
            ["animal.id"],
        ),
        sa.ForeignKeyConstraint(
            ["vet_id"],
            ["vet.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "medical_activity_record",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("medical_activity_id", sa.Integer(), nullable=False),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["medical_activity_id"],
            ["medical_activity.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("medical_activity_record")
    op.drop_table("medical_activity")
    # ### end Alembic commands ###
